<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Likes Modal with Tailwind Animations</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
    <style>
        @keyframes fadeSlideIn {
            0% {
                opacity: 0;
                transform: translateY(20px);
            }

            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-fade-slide-in {
            animation: fadeSlideIn 0.4s ease forwards;
        }

        .scrollbar-thin::-webkit-scrollbar {
            width: 6px;
        }

        .scrollbar-thin::-webkit-scrollbar-thumb {
            background-color: #bbb;
            border-radius: 10px;
        }

        .scrollbar-thin {
            scrollbar-width: thin;
            scrollbar-color: #bbb transparent;
        }
    </style>
</head>

<body class="bg-transparent flex items-center justify-center min-h-screen px-4">

    <!-- Modal overlay -->
    <div id="likesModel"
        class="fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm flex items-center justify-center z-50 hidden">
        <!-- Modal container -->

        <div
            class="bg-gray-800 rounded-xl w-full max-w-md max-h-[80vh] flex flex-col animate-fade-slide-in shadow-xl overflow-hidden">
            <!-- Header -->
            <header class="flex items-center justify-between px-5 py-4 border-b border-gray-700">
                <h2 class="text-white text-lg font-semibold tracking-wide select-none">Likes</h2>

                <button aria-label="Close"
                    class="text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 rounded"
                    id="closeBtn">
                    <span class="material-icons text-3xl">close</span>
                </button>
            </header>
            <!-- Likes list content -->
            <div class="overflow-y-auto scrollbar-thin flex-1">
                <ul id="likeDetails" class="divide-y divide-gray-700">
                    <!-- Populated dynamically -->
                </ul>
            </div>
        </div>
    </div>
    <% const followings=following.map(f=> f.following._id.toString());
        %>

        <script>

            function showLikes(element, postId) {
                document.getElementById("likesModel").classList.remove("hidden");
                document.body.style.overflow = "hidden"
                const details = document.getElementById("likeDetails");
                let userId = "<%= user._id %>";

                fetch("/post/likes", {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ postId }),
                })
                    .then(response => response.json())
                    .then(data => {
                        const likes = data.likes;
                        details.innerHTML = ""; // Clear previous likes

                        likes.forEach(like => {
                            const imageSrc = like.userId.profilePic
                                ? `data:image/jpeg;base64,${like.userId.profilePic}`
                                : "https://example.com/default-avatar.jpg";




                            details.innerHTML += `
              <li class="flex items-center justify-between px-5 py-4 hover:bg-gray-700 transition-colors duration-300">
                <div class="flex items-center space-x-4">
                  <img src='${imageSrc}'
                    alt="Profile photo"
                    class="w-12 h-12 rounded-full object-cover overflow-hidden" loading="lazy" />
                  <div>
                    <p class="text-white font-semibold leading-tight select-text">
                      ${like.userId.userName || "Unknown User"}
                      <span class="text-gray-400 text-sm">(@${like.userId.userName})</span>
                    </p>
                    <p class="text-gray-400 text-sm select-text">
                      ${like.userId.fullName || "Unknown User"}
                    </p>
                  </div>
                </div>
               
               
                            
              </li>
            `;
                        });
                    })
                    .catch(err => {
                        console.error("Error fetching likes:", err);
                    });
            }

            // Close modal functionality
            document.getElementById('closeBtn').addEventListener('click', () => {

                document.getElementById("likesModel").classList.add("hidden");
                document.body.style.overflow = "auto";
            });


        </script>
</body>

</html>